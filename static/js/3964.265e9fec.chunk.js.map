{"version":3,"file":"static/js/3964.265e9fec.chunk.js","mappings":"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","sources":["views/firebase.js","views/pages/register/Register.js","../node_modules/@coreui/icons/src/free/cil-lock-locked.ts","../node_modules/@coreui/icons/src/free/cil-user.ts"],"sourcesContent":["// import { initializeApp } from \"firebase/app\";\r\n// import { getAuth } from \"firebase/auth\"\r\n\r\n// const firebaseConfig = {\r\n//     apiKey: \"AIzaSyCTpn91Ro9oVLu8PlsBXkP2gcZEnbxvmHE\",\r\n//     authDomain: \"form-a32ed.firebaseapp.com\",\r\n//     databaseURL: \"https://form-a32ed-default-rtdb.firebaseio.com\",\r\n//     projectId: \"form-a32ed\",\r\n//     storageBucket: \"form-a32ed.appspot.com\",\r\n//     messagingSenderId: \"1092203340313\",\r\n//     appId: \"1:1092203340313:web:ad591d0f8dd9e21f340088\",\r\n//     measurementId: \"G-LCD4EFXBRH\"\r\n// };\r\n\r\n// const app = initializeApp(firebaseConfig);\r\n// // export const auth = getAuth(app);\r\n// export default app\r\n// Import the functions you need from the SDKs you need\r\n// import { initializeApp } from \"firebase/app\";\r\n// import firebase from \"firebase/compat/app\"\r\n// import \"firebase/compat/database\"\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// const firebaseConfig = {\r\n//     apiKey: \"AIzaSyCYYgwtBhXBvRTPGc8i8GpqScYYCEte6Ys\",\r\n//     authDomain: \"last-3b395.firebaseapp.com\",\r\n//     databaseURL: \"https://last-3b395-default-rtdb.firebaseio.com\",\r\n//     projectId: \"last-3b395\",\r\n//     storageBucket: \"last-3b395.appspot.com\",\r\n//     messagingSenderId: \"479262466021\",\r\n//     appId: \"1:479262466021:web:2cd50032e15feef041590c\"\r\n// };\r\n\r\n// Initialize Firebase\r\n// const app = firebase.initializeApp(firebaseConfig);\r\n// export default app\r\n\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport firebase from 'firebase/compat/app';\r\n// import firebase from \"firebase/app\";\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/firestore';\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCYYgwtBhXBvRTPGc8i8GpqScYYCEte6Ys\",\r\n    authDomain: \"last-3b395.firebaseapp.com\",\r\n    databaseURL: \"https://last-3b395-default-rtdb.firebaseio.com\",\r\n    projectId: \"last-3b395\",\r\n    storageBucket: \"last-3b395.appspot.com\",\r\n    messagingSenderId: \"479262466021\",\r\n    appId: \"1:479262466021:web:2cd50032e15feef041590c\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nexport default app","// import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { useNavigate } from 'react-router-dom';\nimport { DB } from \"../../firebase\"\n// const Register = (e) => {\n//   const [name, setName] = useState(\"\")\n//   const [email, setEmail] = useState(\"\")\n//   const [password, setPassword] = useState(\"\")\n\n\n//   const auth = getAuth(app);\n//   const navigate = useNavigate()\n\n//   const Sinup = () => {\n\n//     createUserWithEmailAndPassword(auth, email, password, name)\n//       .then((userCredential) => {\n//         // Signed in \n//         const user = userCredential.user;\n\n//         console.log(user);\n\n//         alert(\"Successfully created a Account\")\n\n//         navigate(\"/\")\n//         // ...\n//       })\n//       .catch((error) => {\n//         const errorCode = error.code;\n//         alert(errorCode)\n//         // ..\n//       });\n//   }\n\n\n\n\n//   return (\n//     <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n//       <CContainer>\n//         <CRow className=\"justify-content-center\">\n//           <CCol md={9} lg={7} xl={6}>\n//             <CCard className=\"mx-4\">\n//               <CCardBody className=\"p-4\">\n//                 <CForm>\n//                   <h1>Register</h1>\n//                   <p className=\"text-medium-emphasis\">Create your account</p>\n//                   <CInputGroup className=\"mb-3\">\n//                     <CInputGroupText>\n//                       <CIcon icon={cilUser} />\n//                     </CInputGroupText>\n//                     <CFormInput placeholder=\"Username\"\n//                       onChange={(e) => { setName(e.target.value) }}\n//                       type={\"name\"}\n//                       autoComplete=\"username\" />\n//                   </CInputGroup>\n//                   <CInputGroup className=\"mb-3\">\n//                     <CInputGroupText>@</CInputGroupText>\n//                     <CFormInput placeholder=\"Email\"\n//                       onChange={(e) => { setEmail(e.target.value) }}\n//                       type={\"email\"}\n//                       autoComplete=\"email\" />\n//                   </CInputGroup>\n//                   <CInputGroup className=\"mb-3\">\n//                     <CInputGroupText>\n//                       <CIcon icon={cilLockLocked} />\n//                     </CInputGroupText>\n//                     <CFormInput\n//                       placeholder=\"Password\"\n//                       onChange={(e) => { setPassword(e.target.value) }}\n//                       type={\"password\"}\n//                       autoComplete=\"new-password\"\n//                     />\n//                   </CInputGroup>\n//                   <div className=\"d-grid\">\n//                     <CButton color=\"success\" onClick={Sinup}>Create Account</CButton>\n//                   </div>\n//                 </CForm>\n//               </CCardBody>\n//             </CCard>\n//           </CCol>\n//         </CRow>\n//       </CContainer>\n//     </div>\n//   )\n// }\n\n// export default Register\nimport React, { useState } from 'react';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { getDatabase, ref, set } from 'firebase/database';\nimport app from '../../firebase';\n\nexport default function Register() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const navigate = useNavigate()\n  const handleSignUp = async (event) => {\n    // event.preventDefault();\n    try {\n      const { user } = await createUserWithEmailAndPassword(app.auth(), email, password);\n      const db = getDatabase(app);\n      const usersRef = ref(db, 'users/' + user.uid);\n      await set(usersRef, {\n        name,\n        email, password\n      });\n      alert(\"Successfully created a Account\")\n      navigate(\"/\")\n    } catch (error) {\n      alert(error)\n      console.error(error);\n    }\n  }\n\n  return (\n    <>\n      {/* <form onSubmit={handleSignUp}>\n        <label>\n          Name:\n          <input type=\"text\" value={name} onChange={(event) => setName(event.target.value)} />\n        </label>\n        <label>\n          Email:\n          <input type=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} />\n        </label>\n        <label>\n          Password:\n          <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\n        </label>\n        <button type=\"submit\">Sign up</button>\n      </form> */}\n\n\n      <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md={9} lg={7} xl={6}>\n              <CCard className=\"mx-4\">\n                <CCardBody className=\"p-4\">\n                  <CForm>\n                    <h1>Register</h1>\n                    <p className=\"text-medium-emphasis\">Create your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput placeholder=\"Username\"\n                        onChange={(e) => { setName(e.target.value) }}\n                        type={\"name\"}\n                        autoComplete=\"username\" />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>@</CInputGroupText>\n                      <CFormInput placeholder=\"Email\"\n                        onChange={(e) => { setEmail(e.target.value) }}\n                        type={\"email\"}\n                        autoComplete=\"email\" />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        placeholder=\"Password\"\n                        onChange={(e) => { setPassword(e.target.value) }}\n                        type={\"password\"}\n                        autoComplete=\"new-password\"\n                      />\n                    </CInputGroup>\n                    <div className=\"d-grid\">\n                      <CButton color=\"success\" onClick={handleSignUp}>Create Account</CButton>\n                    </div>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n    </>\n\n\n  );\n}\n","export var cilLockLocked = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"];\n","export var cilUser = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"];\n"],"names":["app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Register","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","navigate","useNavigate","handleSignUp","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","_yield$createUserWith","user","db","usersRef","wrap","_context","prev","next","createUserWithEmailAndPassword","sent","getDatabase","ref","uid","set","alert","t0","console","error","stop","_x","apply","arguments","_jsx","_Fragment","children","className","CContainer","CRow","CCol","md","lg","xl","CCard","CCardBody","_jsxs","CForm","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","onChange","e","target","value","type","autoComplete","cilLockLocked","CButton","color","onClick"],"sourceRoot":""}